import requests
import json
import sys
import getopt 
import urllib
import os 
import subprocess 
import re
import datetime
from bs4 import BeautifulSoup as bs
import lib.core.constants as c 
from lib.core.requests import request
from lib.core.iocCheck import check_header,find_compromise,check_content


# A simple python script that checks targets for signs 
# of compromise for CVE, XSS on HP Printer Embedded Webserver
#                          Author: Tyler Butler, @tbutler0x90

# Take output from compromise finder and print to file
def printer(payload, url, outfile):
    f = open(outfile,'a')
    f.write(str(url)+':'+str(payload)+'\n')
    f.close()
    return

# Print usage options to sysout 
def usage():
    sys.stdout.write(c.Red)
    print(c.synerror)
    print(c.example)
    sys.exit(0)

# Print help to sysout 
def help():
    sys.stdout.write(c.Red)
    print(c.synerror)
    print(c.example)
    sys.exit(0)

def get_stats(coutner):
    sys.stdout.write(c.BIWhite)
    print('{!} ',coutner,' Targets Searched')
    return

def handler(infile,outfile,verbosity):
    # TODO Error Handling
    response, url, counter = request(infile,outfile,verbosity)
    check_header(response,verbosity)
    payload = find_compromise(response, verbosity)
    printer(payload, url, outfile)
    get_stats(counter)
    sys.stdout.write(c.BIWhite)

    if verbosity == 2:
        print('{!} Outfile File Located at :',outfile)
    print(c.exit)

    sys.exit(0)


# Get arguments from the user, decide which function to call
def main(argv):
    infile = ''
    outfile = ''
    target = ''
    verbosity = 1
    sys.stdout.write(c.BIWhite)
    print(c.welcome)
    if len(sys.argv) == 1:
        usage()
    try:
      opts, args = getopt.getopt(argv,"hi:o:v",["ifile=","ofile=","verbosity="])
    except getopt.GetoptError:  
        usage()
        sys.exit(2)
    for opt, arg in opts:
        if opt == '-h':
            help()
            sys.exit()
        elif opt in ("-i", "--ifile"):
            infile = arg
        elif opt in ("-o", "--ofile"):
            outfile = arg
        elif opt in ("-v", "--verbosity"):
            verbosity = arg
    handler(infile,outfile,verbosity)

if __name__ == "__main__":
   main(sys.argv[1:])