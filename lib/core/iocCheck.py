import requests
import json
import sys
import getopt 
import urllib
import os 
import subprocess 
import re
import datetime
from bs4 import BeautifulSoup as bs
import lib.core.constants as c 
import lib.utils.printer as printer

def check_header(response,verbosity):
    server_version = response.headers["Server"]
    supported_versions =['HP HTTP Server; HP Officejet 4630 series - B4L03A']
    flag = False
    for opt in supported_versions:
        if opt in str(server_version):
            flag = True
    if verbosity == 1:
        print('{!} -------- {INFO} Supported Server Version Detected')
        print('{!} -------- {INFO} Server Version:',server_version)
    return

# parse url response body and search for content of fields vulnerable to xss
def find_compromise(response,verbosity,html_tag):
    soup = bs(response.text, 'html.parser')
    vuln_field = soup.find(html_tag.lower())
    if verbosity == 2:
        print('{!} -------- {INFO} Searching for Entries in ',html_tag)
    if verbosity == 4:
        print('{!} -------- {DEBUG} vuln_field',len(vuln_field))
    for item in vuln_field:
        if len(item) == 0:
            if verbosity == 2:
                sys.stdout.write(c.BIGreen)
                print('{!} OK')
                print('{!} AirPrint location',item.get_text())
            else:
                continue
        else:
            if verbosity == 1:
                sys.stdout.write(c.BIYellow)
                print('{!} -------- {INFO}: Found Something in DeviceLocation Field')
                out = check_content(item,verbosity)
    return out

def check_content(payload,verbosity):
    if verbosity == 1:
        print('{!} -------- {INFO}: Checking for Suspicious characters')
    badchars =['script','onload','onerror','window.location','img']
    flag = False
    for char in badchars:
        if char in str(payload):
            flag = True
    if flag:
        if verbosity == 1:
            sys.stdout.write(c.BIRed)
            print('{!} -------- {WARNING}: Found Indicator of Compromise')
            print('{!} -------- {WARNING}: Field Setting :'+str(payload))
        return str(payload)
    else:         
        sys.stdout.write(c.BIGreen)
        if verbosity == 1:
            print('{!} -------- {OK}: No IoCs Detected')
            print('{!} -------- {OK}: Payload:', str(payload))

    return
